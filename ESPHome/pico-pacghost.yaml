esphome:
  name: pico-pacghost
  friendly_name: pico-pacghost
  on_boot: 
    then:
      - switch.turn_off: reboot
      - light.control: 
          id: led_strip
          blue: 100%

rp2040:
  board: rpipicow
  framework:
    # Required until https://github.com/platformio/platform-raspberrypi/pull/36 is merged
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi.git

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot in case wifi connection fails
  ap:
    ssid: "Pico-Pacghost Fallback Hotspot"
    password: ""

light:
  - platform: rp2040_pio_led_strip
    name: led_strip
    id: led_strip
    pin: GPIO0
    num_leds: 5
    pio: 0
    rgb_order: GRB
    restore_mode: RESTORE_DEFAULT_OFF 
    chipset: WS2812B
    # internal: True
    effects:
      - lambda:
          name: Breathing
          update_interval: 3.5s
          lambda: |-
            static int state = 0;
            static int color = 1;
            auto call = id(led_strip).turn_on(); //the id of your light
            call.set_transition_length(4000);
            if (state == 0) 
            {
            call.set_brightness(1.0);
            }
            else if (state == 1)
            {
            call.set_brightness(0.5);
            }
            call.perform();
            state ++;
            if (state == 2){
            state = 0;
            }
sensor:
  - platform: uptime
    name: Uptime
  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s

binary_sensor:
  - platform: status
    name: "Status"
  - platform: homeassistant
    name: "uk_summary"
    id: "uk_summary"
    internal: True
    entity_id: binary_sensor.sensor_uptimekuma_summary
    publish_initial_state: True
    on_state:
      then:
        - if:
            condition:
              binary_sensor.is_on: uk_summary
            then:
              - light.turn_on: 
                  id: led_strip
                  red: 0%
                  green: 100%
                  blue: 0%
                  # brightness: 100%
                  # effect: Breathing
            else:
              - light.turn_on:
                  id: led_strip
                  red: 100%
                  green: 0%
                  blue: 0%
                  # brightness: 100%
                  # effect: Breathing

text_sensor: 
  - platform: wifi_info
    ip_address:
      name: "IP Address"
    ssid:
      name: "WiFi SSID"
    mac_address:
      name: "WiFi MAC Address"

time:
  - platform: homeassistant
    id: homeassistant_time

switch:
  - platform: restart
    name: "Reboot"
    id: reboot